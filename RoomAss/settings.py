"""
Django settings for RoomAss project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from celery.schedules import crontab

# allows environment variables from .env file
# storing secret key there and using .gitignore
from decouple import Config, Csv
config = Config(repository= "C:\\Users\\David\\TO_Django_Rooms\\.env")



# Build paths inside the project like this: BASE_DIR / 'subdir'.'
# (So BASE_DIR is the path to the overarching project folder)
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# Key as variable in .env file
SECRET_KEY = config('SECRET_KEY', default = "test")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# allowing local host and hburg pc
ALLOWED_HOSTS = ['10.0.0.68', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_beat', # for scheduling background tasks
    'schedule', # used with celery
    'catalog.apps.CatalogConfig', # This object was created for use in /catalog/apps.py
    'corsheaders', # security headers, more important when app open to internet 
]
 
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    

]

ROOT_URLCONF = 'RoomAss.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'RoomAss.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
# If you want to serve static files in development, use the following settings
STATICFILES_DIRS = [
    BASE_DIR / "static",
]


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Redirect to home URL after login (Default redirects to /accounts/profile/)
LOGIN_REDIRECT_URL = '/'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


CORS_ALLOWED_ORIGINS = [
      'http://localhost:8000',
    'http://127.0.0.1:8000',
]

# Optional: Allow credentials
CORS_ALLOW_CREDENTIALS = True

# FIXME DELETE THIS
CORS_ALLOW_ALL_ORIGINS = True

# Optional: Allow specific headers
CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'x-csrftoken',
    'accept',
    'origin',
    'x-requested-with',
]

# Optional: Allow specific methods
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
]

CELERY_BROKER_URL = 'amqp://localhost'  # RabbitMQ URL (localhost means it's on the same machine)
CELERY_ACCEPT_CONTENT = ['json']  # Celery will accept only JSON-encoded messages
CELERY_TASK_SERIALIZER = 'json'  # Task data will be serialized to JSON
CELERY_RESULT_BACKEND = 'rpc://'  # You can use RabbitMQ's RPC feature for result storage

# Optionally configure the timezone and task serializer
CELERY_TIMEZONE ='UTC'


# Celery Beat Configuration (if using Django Celery Beat)
#CELERY_BEAT_SCHEDULE = {
 #   'delete-ended-events-every-midnight': {
  #      'task': 'catalog.tasks.delete_ended_events',
   #     'schedule': crontab(hour=13, minute=45),
    #},
#}